
a.out:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <__abi_tag-0x47>
 328:	78 38                	js     362 <__abi_tag-0x3a>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	cs xor (%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	30 00                	xor    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	80 00 c0             	addb   $0xc0,(%rax)
 34c:	04 00                	add    $0x0,%al
 34e:	00 00                	add    %al,(%rax)
 350:	01 00                	add    %eax,(%rax)
 352:	00 00                	add    %al,(%rax)
 354:	00 00                	add    %al,(%rax)
 356:	00 00                	add    %al,(%rax)
 358:	01 00                	add    %eax,(%rax)
 35a:	01 c0                	add    %eax,%eax
 35c:	04 00                	add    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	09 00                	or     %eax,(%rax)
 362:	00 00                	add    %al,(%rax)
 364:	00 00                	add    %al,(%rax)
 366:	00 00                	add    %al,(%rax)
 368:	02 00                	add    (%rax),%al
 36a:	01 c0                	add    %eax,%eax
 36c:	04 00                	add    $0x0,%al
 36e:	00 00                	add    %al,(%rax)
 370:	01 00                	add    %eax,(%rax)
 372:	00 00                	add    %al,(%rax)
 374:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000378 <.note.gnu.build-id>:
 378:	04 00                	add    $0x0,%al
 37a:	00 00                	add    %al,(%rax)
 37c:	14 00                	adc    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	03 00                	add    (%rax),%eax
 382:	00 00                	add    %al,(%rax)
 384:	47                   	rex.RXB
 385:	4e 55                	rex.WRX push %rbp
 387:	00 f5                	add    %dh,%ch
 389:	cb                   	lret   
 38a:	1f                   	(bad)  
 38b:	18 74 f7 48          	sbb    %dh,0x48(%rdi,%rsi,8)
 38f:	01 e2                	add    %esp,%edx
 391:	6c                   	insb   (%dx),%es:(%rdi)
 392:	a2 bf 7b 1c 02 74 75 	movabs %al,0x3de7574021c7bbf
 399:	de 03 
 39b:	ea                   	(bad)  

Disassembly of section .note.ABI-tag:

000000000000039c <__abi_tag>:
 39c:	04 00                	add    $0x0,%al
 39e:	00 00                	add    %al,(%rax)
 3a0:	10 00                	adc    %al,(%rax)
 3a2:	00 00                	add    %al,(%rax)
 3a4:	01 00                	add    %eax,(%rax)
 3a6:	00 00                	add    %al,(%rax)
 3a8:	47                   	rex.RXB
 3a9:	4e 55                	rex.WRX push %rbp
 3ab:	00 00                	add    %al,(%rax)
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 04 00             	add    %al,(%rax,%rax,1)
 3b2:	00 00                	add    %al,(%rax)
 3b4:	04 00                	add    $0x0,%al
 3b6:	00 00                	add    %al,(%rax)
 3b8:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

00000000000003c0 <.gnu.hash>:
 3c0:	01 00                	add    %eax,(%rax)
 3c2:	00 00                	add    %al,(%rax)
 3c4:	01 00                	add    %eax,(%rax)
 3c6:	00 00                	add    %al,(%rax)
 3c8:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000000003e0 <.dynsym>:
	...
 3f8:	10 00                	adc    %al,(%rax)
 3fa:	00 00                	add    %al,(%rax)
 3fc:	12 00                	adc    (%rax),%al
	...
 40e:	00 00                	add    %al,(%rax)
 410:	7e 00                	jle    412 <__abi_tag+0x76>
 412:	00 00                	add    %al,(%rax)
 414:	20 00                	and    %al,(%rax)
	...
 426:	00 00                	add    %al,(%rax)
 428:	31 00                	xor    %eax,(%rax)
 42a:	00 00                	add    %al,(%rax)
 42c:	12 00                	adc    (%rax),%al
	...
 43e:	00 00                	add    %al,(%rax)
 440:	42 00 00             	rex.X add %al,(%rax)
 443:	00 12                	add    %dl,(%rdx)
	...
 455:	00 00                	add    %al,(%rax)
 457:	00 9a 00 00 00 20    	add    %bl,0x20000000(%rdx)
	...
 46d:	00 00                	add    %al,(%rax)
 46f:	00 22                	add    %ah,(%rdx)
 471:	00 00                	add    %al,(%rax)
 473:	00 12                	add    %dl,(%rdx)
	...
 485:	00 00                	add    %al,(%rax)
 487:	00 a9 00 00 00 20    	add    %ch,0x20000000(%rcx)
	...
 49d:	00 00                	add    %al,(%rax)
 49f:	00 01                	add    %al,(%rcx)
 4a1:	00 00                	add    %al,(%rax)
 4a3:	00 22                	add    %ah,(%rdx)
	...

Disassembly of section .dynstr:

00000000000004b8 <.dynstr>:
 4b8:	00 5f 5f             	add    %bl,0x5f(%rdi)
 4bb:	63 78 61             	movsxd 0x61(%rax),%edi
 4be:	5f                   	pop    %rdi
 4bf:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 4c5:	7a 65                	jp     52c <__abi_tag+0x190>
 4c7:	00 5f 5f             	add    %bl,0x5f(%rdi)
 4ca:	6c                   	insb   (%dx),%es:(%rdi)
 4cb:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 4d2:	72 74                	jb     548 <__abi_tag+0x1ac>
 4d4:	5f                   	pop    %rdi
 4d5:	6d                   	insl   (%dx),%es:(%rdi)
 4d6:	61                   	(bad)  
 4d7:	69 6e 00 5f 5f 69 73 	imul   $0x73695f5f,0x0(%rsi),%ebp
 4de:	6f                   	outsl  %ds:(%rsi),(%dx)
 4df:	63 39                	movsxd (%rcx),%edi
 4e1:	39 5f 73             	cmp    %ebx,0x73(%rdi)
 4e4:	63 61 6e             	movsxd 0x6e(%rcx),%esp
 4e7:	66 00 5f 5f          	data16 add %bl,0x5f(%rdi)
 4eb:	73 74                	jae    561 <__abi_tag+0x1c5>
 4ed:	61                   	(bad)  
 4ee:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
 4f1:	63 68 6b             	movsxd 0x6b(%rax),%ebp
 4f4:	5f                   	pop    %rdi
 4f5:	66 61                	data16 (bad) 
 4f7:	69 6c 00 70 72 69 6e 	imul   $0x746e6972,0x70(%rax,%rax,1),%ebp
 4fe:	74 
 4ff:	66 00 6c 69 62       	data16 add %ch,0x62(%rcx,%rbp,2)
 504:	63 2e                	movsxd (%rsi),%ebp
 506:	73 6f                	jae    577 <__abi_tag+0x1db>
 508:	2e 36 00 47 4c       	cs ss add %al,0x4c(%rdi)
 50d:	49                   	rex.WB
 50e:	42                   	rex.X
 50f:	43 5f                	rex.XB pop %r15
 511:	32 2e                	xor    (%rsi),%ch
 513:	37                   	(bad)  
 514:	00 47 4c             	add    %al,0x4c(%rdi)
 517:	49                   	rex.WB
 518:	42                   	rex.X
 519:	43 5f                	rex.XB pop %r15
 51b:	32 2e                	xor    (%rsi),%ch
 51d:	32 2e                	xor    (%rsi),%ch
 51f:	35 00 47 4c 49       	xor    $0x494c4700,%eax
 524:	42                   	rex.X
 525:	43 5f                	rex.XB pop %r15
 527:	32 2e                	xor    (%rsi),%ch
 529:	34 00                	xor    $0x0,%al
 52b:	47                   	rex.RXB
 52c:	4c                   	rex.WR
 52d:	49                   	rex.WB
 52e:	42                   	rex.X
 52f:	43 5f                	rex.XB pop %r15
 531:	32 2e                	xor    (%rsi),%ch
 533:	33 34 00             	xor    (%rax,%rax,1),%esi
 536:	5f                   	pop    %rdi
 537:	49 54                	rex.WB push %r12
 539:	4d 5f                	rex.WRB pop %r15
 53b:	64 65 72 65          	fs gs jb 5a4 <__abi_tag+0x208>
 53f:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 546:	4d 
 547:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 549:	6f                   	outsl  %ds:(%rsi),(%dx)
 54a:	6e                   	outsb  %ds:(%rsi),(%dx)
 54b:	65 54                	gs push %rsp
 54d:	61                   	(bad)  
 54e:	62                   	(bad)  
 54f:	6c                   	insb   (%dx),%es:(%rdi)
 550:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 554:	67 6d                	insl   (%dx),%es:(%edi)
 556:	6f                   	outsl  %ds:(%rsi),(%dx)
 557:	6e                   	outsb  %ds:(%rsi),(%dx)
 558:	5f                   	pop    %rdi
 559:	73 74                	jae    5cf <__abi_tag+0x233>
 55b:	61                   	(bad)  
 55c:	72 74                	jb     5d2 <__abi_tag+0x236>
 55e:	5f                   	pop    %rdi
 55f:	5f                   	pop    %rdi
 560:	00 5f 49             	add    %bl,0x49(%rdi)
 563:	54                   	push   %rsp
 564:	4d 5f                	rex.WRB pop %r15
 566:	72 65                	jb     5cd <__abi_tag+0x231>
 568:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 56f:	4d 
 570:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 572:	6f                   	outsl  %ds:(%rsi),(%dx)
 573:	6e                   	outsb  %ds:(%rsi),(%dx)
 574:	65 54                	gs push %rsp
 576:	61                   	(bad)  
 577:	62                   	.byte 0x62
 578:	6c                   	insb   (%dx),%es:(%rdi)
 579:	65                   	gs
	...

Disassembly of section .gnu.version:

000000000000057c <.gnu.version>:
 57c:	00 00                	add    %al,(%rax)
 57e:	02 00                	add    (%rax),%al
 580:	01 00                	add    %eax,(%rax)
 582:	03 00                	add    (%rax),%eax
 584:	04 00                	add    $0x0,%al
 586:	01 00                	add    %eax,(%rax)
 588:	05 00 01 00 04       	add    $0x4000100,%eax
	...

Disassembly of section .gnu.version_r:

0000000000000590 <.gnu.version_r>:
 590:	01 00                	add    %eax,(%rax)
 592:	04 00                	add    $0x0,%al
 594:	49 00 00             	rex.WB add %al,(%r8)
 597:	00 10                	add    %dl,(%rax)
 599:	00 00                	add    %al,(%rax)
 59b:	00 00                	add    %al,(%rax)
 59d:	00 00                	add    %al,(%rax)
 59f:	00 17                	add    %dl,(%rdi)
 5a1:	69 69 0d 00 00 05 00 	imul   $0x50000,0xd(%rcx),%ebp
 5a8:	53                   	push   %rbx
 5a9:	00 00                	add    %al,(%rax)
 5ab:	00 10                	add    %dl,(%rax)
 5ad:	00 00                	add    %al,(%rax)
 5af:	00 75 1a             	add    %dh,0x1a(%rbp)
 5b2:	69 09 00 00 04 00    	imul   $0x40000,(%rcx),%ecx
 5b8:	5d                   	pop    %rbp
 5b9:	00 00                	add    %al,(%rax)
 5bb:	00 10                	add    %dl,(%rax)
 5bd:	00 00                	add    %al,(%rax)
 5bf:	00 14 69             	add    %dl,(%rcx,%rbp,2)
 5c2:	69 0d 00 00 03 00 69 	imul   $0x69,0x30000(%rip),%ecx        # 305cc <_end+0x2c584>
 5c9:	00 00 00 
 5cc:	10 00                	adc    %al,(%rax)
 5ce:	00 00                	add    %al,(%rax)
 5d0:	b4 91                	mov    $0x91,%ah
 5d2:	96                   	xchg   %eax,%esi
 5d3:	06                   	(bad)  
 5d4:	00 00                	add    %al,(%rax)
 5d6:	02 00                	add    (%rax),%al
 5d8:	73 00                	jae    5da <__abi_tag+0x23e>
 5da:	00 00                	add    %al,(%rax)
 5dc:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000000005e0 <.rela.dyn>:
 5e0:	e8 3d 00 00 00       	call   622 <__abi_tag+0x286>
 5e5:	00 00                	add    %al,(%rax)
 5e7:	00 08                	add    %cl,(%rax)
 5e9:	00 00                	add    %al,(%rax)
 5eb:	00 00                	add    %al,(%rax)
 5ed:	00 00                	add    %al,(%rax)
 5ef:	00 50 11             	add    %dl,0x11(%rax)
 5f2:	00 00                	add    %al,(%rax)
 5f4:	00 00                	add    %al,(%rax)
 5f6:	00 00                	add    %al,(%rax)
 5f8:	f0 3d 00 00 00 00    	lock cmp $0x0,%eax
 5fe:	00 00                	add    %al,(%rax)
 600:	08 00                	or     %al,(%rax)
 602:	00 00                	add    %al,(%rax)
 604:	00 00                	add    %al,(%rax)
 606:	00 00                	add    %al,(%rax)
 608:	00 11                	add    %dl,(%rcx)
 60a:	00 00                	add    %al,(%rax)
 60c:	00 00                	add    %al,(%rax)
 60e:	00 00                	add    %al,(%rax)
 610:	38 40 00             	cmp    %al,0x0(%rax)
 613:	00 00                	add    %al,(%rax)
 615:	00 00                	add    %al,(%rax)
 617:	00 08                	add    %cl,(%rax)
 619:	00 00                	add    %al,(%rax)
 61b:	00 00                	add    %al,(%rax)
 61d:	00 00                	add    %al,(%rax)
 61f:	00 38                	add    %bh,(%rax)
 621:	40 00 00             	rex add %al,(%rax)
 624:	00 00                	add    %al,(%rax)
 626:	00 00                	add    %al,(%rax)
 628:	d8 3f                	fdivrs (%rdi)
 62a:	00 00                	add    %al,(%rax)
 62c:	00 00                	add    %al,(%rax)
 62e:	00 00                	add    %al,(%rax)
 630:	06                   	(bad)  
 631:	00 00                	add    %al,(%rax)
 633:	00 01                	add    %al,(%rcx)
	...
 63d:	00 00                	add    %al,(%rax)
 63f:	00 e0                	add    %ah,%al
 641:	3f                   	(bad)  
 642:	00 00                	add    %al,(%rax)
 644:	00 00                	add    %al,(%rax)
 646:	00 00                	add    %al,(%rax)
 648:	06                   	(bad)  
 649:	00 00                	add    %al,(%rax)
 64b:	00 02                	add    %al,(%rdx)
	...
 655:	00 00                	add    %al,(%rax)
 657:	00 e8                	add    %ch,%al
 659:	3f                   	(bad)  
 65a:	00 00                	add    %al,(%rax)
 65c:	00 00                	add    %al,(%rax)
 65e:	00 00                	add    %al,(%rax)
 660:	06                   	(bad)  
 661:	00 00                	add    %al,(%rax)
 663:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 669 <__abi_tag+0x2cd>
 669:	00 00                	add    %al,(%rax)
 66b:	00 00                	add    %al,(%rax)
 66d:	00 00                	add    %al,(%rax)
 66f:	00 f0                	add    %dh,%al
 671:	3f                   	(bad)  
 672:	00 00                	add    %al,(%rax)
 674:	00 00                	add    %al,(%rax)
 676:	00 00                	add    %al,(%rax)
 678:	06                   	(bad)  
 679:	00 00                	add    %al,(%rax)
 67b:	00 07                	add    %al,(%rdi)
	...
 685:	00 00                	add    %al,(%rax)
 687:	00 f8                	add    %bh,%al
 689:	3f                   	(bad)  
 68a:	00 00                	add    %al,(%rax)
 68c:	00 00                	add    %al,(%rax)
 68e:	00 00                	add    %al,(%rax)
 690:	06                   	(bad)  
 691:	00 00                	add    %al,(%rax)
 693:	00 08                	add    %cl,(%rax)
	...

Disassembly of section .rela.plt:

00000000000006a0 <.rela.plt>:
 6a0:	18 40 00             	sbb    %al,0x0(%rax)
 6a3:	00 00                	add    %al,(%rax)
 6a5:	00 00                	add    %al,(%rax)
 6a7:	00 07                	add    %al,(%rdi)
 6a9:	00 00                	add    %al,(%rax)
 6ab:	00 03                	add    %al,(%rbx)
	...
 6b5:	00 00                	add    %al,(%rax)
 6b7:	00 20                	add    %ah,(%rax)
 6b9:	40 00 00             	rex add %al,(%rax)
 6bc:	00 00                	add    %al,(%rax)
 6be:	00 00                	add    %al,(%rax)
 6c0:	07                   	(bad)  
 6c1:	00 00                	add    %al,(%rax)
 6c3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 6ce:	00 00                	add    %al,(%rax)
 6d0:	28 40 00             	sub    %al,0x0(%rax)
 6d3:	00 00                	add    %al,(%rax)
 6d5:	00 00                	add    %al,(%rax)
 6d7:	00 07                	add    %al,(%rdi)
 6d9:	00 00                	add    %al,(%rax)
 6db:	00 06                	add    %al,(%rsi)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <__stack_chk_fail@plt-0x10>:
    1020:	ff 35 e2 2f 00 00    	push   0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmp    *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <__stack_chk_fail@plt>:
    1030:	ff 25 e2 2f 00 00    	jmp    *0x2fe2(%rip)        # 4018 <__stack_chk_fail@GLIBC_2.4>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <printf@plt>:
    1040:	ff 25 da 2f 00 00    	jmp    *0x2fda(%rip)        # 4020 <printf@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <__isoc99_scanf@plt>:
    1050:	ff 25 d2 2f 00 00    	jmp    *0x2fd2(%rip)        # 4028 <__isoc99_scanf@GLIBC_2.7>
    1056:	68 02 00 00 00       	push   $0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .text:

0000000000001060 <_start>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	31 ed                	xor    %ebp,%ebp
    1066:	49 89 d1             	mov    %rdx,%r9
    1069:	5e                   	pop    %rsi
    106a:	48 89 e2             	mov    %rsp,%rdx
    106d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1071:	50                   	push   %rax
    1072:	54                   	push   %rsp
    1073:	45 31 c0             	xor    %r8d,%r8d
    1076:	31 c9                	xor    %ecx,%ecx
    1078:	48 8d 3d da 00 00 00 	lea    0xda(%rip),%rdi        # 1159 <main>
    107f:	ff 15 53 2f 00 00    	call   *0x2f53(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1085:	f4                   	hlt    
    1086:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    108d:	00 00 00 

0000000000001090 <deregister_tm_clones>:
    1090:	48 8d 3d a9 2f 00 00 	lea    0x2fa9(%rip),%rdi        # 4040 <__TMC_END__>
    1097:	48 8d 05 a2 2f 00 00 	lea    0x2fa2(%rip),%rax        # 4040 <__TMC_END__>
    109e:	48 39 f8             	cmp    %rdi,%rax
    10a1:	74 15                	je     10b8 <deregister_tm_clones+0x28>
    10a3:	48 8b 05 36 2f 00 00 	mov    0x2f36(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    10aa:	48 85 c0             	test   %rax,%rax
    10ad:	74 09                	je     10b8 <deregister_tm_clones+0x28>
    10af:	ff e0                	jmp    *%rax
    10b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10b8:	c3                   	ret    
    10b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010c0 <register_tm_clones>:
    10c0:	48 8d 3d 79 2f 00 00 	lea    0x2f79(%rip),%rdi        # 4040 <__TMC_END__>
    10c7:	48 8d 35 72 2f 00 00 	lea    0x2f72(%rip),%rsi        # 4040 <__TMC_END__>
    10ce:	48 29 fe             	sub    %rdi,%rsi
    10d1:	48 89 f0             	mov    %rsi,%rax
    10d4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10d8:	48 c1 f8 03          	sar    $0x3,%rax
    10dc:	48 01 c6             	add    %rax,%rsi
    10df:	48 d1 fe             	sar    %rsi
    10e2:	74 14                	je     10f8 <register_tm_clones+0x38>
    10e4:	48 8b 05 05 2f 00 00 	mov    0x2f05(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    10eb:	48 85 c0             	test   %rax,%rax
    10ee:	74 08                	je     10f8 <register_tm_clones+0x38>
    10f0:	ff e0                	jmp    *%rax
    10f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    10f8:	c3                   	ret    
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <__do_global_dtors_aux>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	80 3d 35 2f 00 00 00 	cmpb   $0x0,0x2f35(%rip)        # 4040 <__TMC_END__>
    110b:	75 33                	jne    1140 <__do_global_dtors_aux+0x40>
    110d:	55                   	push   %rbp
    110e:	48 83 3d e2 2e 00 00 	cmpq   $0x0,0x2ee2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1115:	00 
    1116:	48 89 e5             	mov    %rsp,%rbp
    1119:	74 0d                	je     1128 <__do_global_dtors_aux+0x28>
    111b:	48 8b 3d 16 2f 00 00 	mov    0x2f16(%rip),%rdi        # 4038 <__dso_handle>
    1122:	ff 15 d0 2e 00 00    	call   *0x2ed0(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1128:	e8 63 ff ff ff       	call   1090 <deregister_tm_clones>
    112d:	c6 05 0c 2f 00 00 01 	movb   $0x1,0x2f0c(%rip)        # 4040 <__TMC_END__>
    1134:	5d                   	pop    %rbp
    1135:	c3                   	ret    
    1136:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    113d:	00 00 00 
    1140:	c3                   	ret    
    1141:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1148:	00 00 00 00 
    114c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001150 <frame_dummy>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	e9 67 ff ff ff       	jmp    10c0 <register_tm_clones>

0000000000001159 <main>:
    1159:	55                   	push   %rbp
    115a:	48 89 e5             	mov    %rsp,%rbp
    115d:	48 83 ec 30          	sub    $0x30,%rsp
    1161:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1168:	00 00 
    116a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    116e:	31 c0                	xor    %eax,%eax
    1170:	c6 45 db 01          	movb   $0x1,-0x25(%rbp)
    1174:	48 8d 05 8d 0e 00 00 	lea    0xe8d(%rip),%rax        # 2008 <_IO_stdin_used+0x8>
    117b:	48 89 c7             	mov    %rax,%rdi
    117e:	b8 00 00 00 00       	mov    $0x0,%eax
    1183:	e8 b8 fe ff ff       	call   1040 <printf@plt>
    1188:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    118c:	48 89 c6             	mov    %rax,%rsi
    118f:	48 8d 05 b2 0e 00 00 	lea    0xeb2(%rip),%rax        # 2048 <_IO_stdin_used+0x48>
    1196:	48 89 c7             	mov    %rax,%rdi
    1199:	b8 00 00 00 00       	mov    $0x0,%eax
    119e:	e8 ad fe ff ff       	call   1050 <__isoc99_scanf@plt>
    11a3:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    11aa:	eb 52                	jmp    11fe <main+0xa5>
    11ac:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    11b0:	48 89 c6             	mov    %rax,%rsi
    11b3:	48 8d 05 91 0e 00 00 	lea    0xe91(%rip),%rax        # 204b <_IO_stdin_used+0x4b>
    11ba:	48 89 c7             	mov    %rax,%rdi
    11bd:	b8 00 00 00 00       	mov    $0x0,%eax
    11c2:	e8 89 fe ff ff       	call   1050 <__isoc99_scanf@plt>
    11c7:	f3 0f 10 45 dc       	movss  -0x24(%rbp),%xmm0
    11cc:	0f 2f 45 e4          	comiss -0x1c(%rbp),%xmm0
    11d0:	76 0c                	jbe    11de <main+0x85>
    11d2:	f3 0f 10 45 dc       	movss  -0x24(%rbp),%xmm0
    11d7:	f3 0f 11 45 e4       	movss  %xmm0,-0x1c(%rbp)
    11dc:	eb 04                	jmp    11e2 <main+0x89>
    11de:	c6 45 db 00          	movb   $0x0,-0x25(%rbp)
    11e2:	f3 0f 10 45 dc       	movss  -0x24(%rbp),%xmm0
    11e7:	f3 0f 2c d0          	cvttss2si %xmm0,%edx
    11eb:	8b 45 e8             	mov    -0x18(%rbp),%eax
    11ee:	48 98                	cltq   
    11f0:	89 54 85 f4          	mov    %edx,-0xc(%rbp,%rax,4)
    11f4:	8b 45 e8             	mov    -0x18(%rbp),%eax
    11f7:	89 45 f0             	mov    %eax,-0x10(%rbp)
    11fa:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    11fe:	8b 45 e0             	mov    -0x20(%rbp),%eax
    1201:	39 45 e8             	cmp    %eax,-0x18(%rbp)
    1204:	7e a6                	jle    11ac <main+0x53>
    1206:	0f b6 45 db          	movzbl -0x25(%rbp),%eax
    120a:	83 f0 01             	xor    $0x1,%eax
    120d:	84 c0                	test   %al,%al
    120f:	74 3c                	je     124d <main+0xf4>
    1211:	8b 45 e0             	mov    -0x20(%rbp),%eax
    1214:	66 0f ef c9          	pxor   %xmm1,%xmm1
    1218:	f3 0f 2a c8          	cvtsi2ss %eax,%xmm1
    121c:	f3 0f 10 45 ec       	movss  -0x14(%rbp),%xmm0
    1221:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    1225:	66 0f ef d2          	pxor   %xmm2,%xmm2
    1229:	f3 0f 5a d0          	cvtss2sd %xmm0,%xmm2
    122d:	66 48 0f 7e d0       	movq   %xmm2,%rax
    1232:	66 48 0f 6e c0       	movq   %rax,%xmm0
    1237:	48 8d 05 12 0e 00 00 	lea    0xe12(%rip),%rax        # 2050 <_IO_stdin_used+0x50>
    123e:	48 89 c7             	mov    %rax,%rdi
    1241:	b8 01 00 00 00       	mov    $0x1,%eax
    1246:	e8 f5 fd ff ff       	call   1040 <printf@plt>
    124b:	eb 3a                	jmp    1287 <main+0x12e>
    124d:	8b 45 e0             	mov    -0x20(%rbp),%eax
    1250:	66 0f ef c9          	pxor   %xmm1,%xmm1
    1254:	f3 0f 2a c8          	cvtsi2ss %eax,%xmm1
    1258:	f3 0f 10 45 ec       	movss  -0x14(%rbp),%xmm0
    125d:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    1261:	66 0f ef db          	pxor   %xmm3,%xmm3
    1265:	f3 0f 5a d8          	cvtss2sd %xmm0,%xmm3
    1269:	66 48 0f 7e d8       	movq   %xmm3,%rax
    126e:	66 48 0f 6e c0       	movq   %rax,%xmm0
    1273:	48 8d 05 f8 0d 00 00 	lea    0xdf8(%rip),%rax        # 2072 <_IO_stdin_used+0x72>
    127a:	48 89 c7             	mov    %rax,%rdi
    127d:	b8 01 00 00 00       	mov    $0x1,%eax
    1282:	e8 b9 fd ff ff       	call   1040 <printf@plt>
    1287:	b8 00 00 00 00       	mov    $0x0,%eax
    128c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1290:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    1297:	00 00 
    1299:	74 05                	je     12a0 <main+0x147>
    129b:	e8 90 fd ff ff       	call   1030 <__stack_chk_fail@plt>
    12a0:	c9                   	leave  
    12a1:	c3                   	ret    

Disassembly of section .fini:

00000000000012a4 <_fini>:
    12a4:	f3 0f 1e fa          	endbr64 
    12a8:	48 83 ec 08          	sub    $0x8,%rsp
    12ac:	48 83 c4 08          	add    $0x8,%rsp
    12b0:	c3                   	ret    

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	00 00                	add    %al,(%rax)
    2006:	00 00                	add    %al,(%rax)
    2008:	44 69 67 69 74 65 20 	imul   $0x61206574,0x69(%rdi),%r12d
    200f:	61 
    2010:	20 71 75             	and    %dh,0x75(%rcx)
    2013:	61                   	(bad)  
    2014:	6e                   	outsb  %ds:(%rsi),(%dx)
    2015:	74 69                	je     2080 <_IO_stdin_used+0x80>
    2017:	64 61                	fs (bad) 
    2019:	64 65 20 64 65 20    	fs and %ah,%gs:0x20(%rbp,%riz,2)
    201f:	69 6e 64 69 63 65 73 	imul   $0x73656369,0x64(%rsi),%ebp
    2026:	20 64 65 20          	and    %ah,0x20(%rbp,%riz,2)
    202a:	61                   	(bad)  
    202b:	75 64                	jne    2091 <__GNU_EH_FRAME_HDR+0x1>
    202d:	69 65 6e 63 69 61 20 	imul   $0x20616963,0x6e(%rbp),%esp
    2034:	71 75                	jno    20ab <__GNU_EH_FRAME_HDR+0x1b>
    2036:	65 20 73 65          	and    %dh,%gs:0x65(%rbx)
    203a:	72 61                	jb     209d <__GNU_EH_FRAME_HDR+0xd>
    203c:	6f                   	outsl  %ds:(%rsi),(%dx)
    203d:	20 64 69 67          	and    %ah,0x67(%rcx,%rbp,2)
    2041:	69 74 61 64 6f 73 00 	imul   $0x2500736f,0x64(%rcx,%riz,2),%esi
    2048:	25 
    2049:	64 00 25 66 00 00 00 	add    %ah,%fs:0x66(%rip)        # 20b6 <__GNU_EH_FRAME_HDR+0x26>
    2050:	4d c3                	rex.WRB ret 
    2052:	a9 64 69 61 20       	test   $0x20616964,%eax
    2057:	6e                   	outsb  %ds:(%rsi),(%dx)
    2058:	65 6d                	gs insl (%dx),%es:(%rdi)
    205a:	20 73 65             	and    %dh,0x65(%rbx)
    205d:	6d                   	insl   (%dx),%es:(%rdi)
    205e:	70 72                	jo     20d2 <__GNU_EH_FRAME_HDR+0x42>
    2060:	65 20 63 72          	and    %ah,%gs:0x72(%rbx)
    2064:	65 73 63             	gs jae 20ca <__GNU_EH_FRAME_HDR+0x3a>
    2067:	65 6e                	outsb  %gs:(%rsi),(%dx)
    2069:	74 65                	je     20d0 <__GNU_EH_FRAME_HDR+0x40>
    206b:	2e 20 25 2e 31 66 00 	cs and %ah,0x66312e(%rip)        # 6651a0 <_end+0x661158>
    2072:	4d                   	rex.WRB
    2073:	65 64 69 61 20 73 65 	gs imul $0x706d6573,%fs:0x20(%rcx),%esp
    207a:	6d 70 
    207c:	72 65                	jb     20e3 <__GNU_EH_FRAME_HDR+0x53>
    207e:	20 63 72             	and    %ah,0x72(%rbx)
    2081:	65 73 63             	gs jae 20e7 <__GNU_EH_FRAME_HDR+0x57>
    2084:	65 6e                	outsb  %gs:(%rsi),(%dx)
    2086:	74 65                	je     20ed <__GNU_EH_FRAME_HDR+0x5d>
    2088:	2e 20 25 2e 31 66 00 	cs and %ah,0x66312e(%rip)        # 6651bd <_end+0x661175>

Disassembly of section .eh_frame_hdr:

0000000000002090 <__GNU_EH_FRAME_HDR>:
    2090:	01 1b                	add    %ebx,(%rbx)
    2092:	03 3b                	add    (%rbx),%edi
    2094:	24 00                	and    $0x0,%al
    2096:	00 00                	add    %al,(%rax)
    2098:	03 00                	add    (%rax),%eax
    209a:	00 00                	add    %al,(%rax)
    209c:	90                   	nop
    209d:	ef                   	out    %eax,(%dx)
    209e:	ff                   	(bad)  
    209f:	ff 58 00             	lcall  *0x0(%rax)
    20a2:	00 00                	add    %al,(%rax)
    20a4:	d0 ef                	shr    %bh
    20a6:	ff                   	(bad)  
    20a7:	ff 40 00             	incl   0x0(%rax)
    20aa:	00 00                	add    %al,(%rax)
    20ac:	c9                   	leave  
    20ad:	f0 ff                	lock (bad) 
    20af:	ff                   	.byte 0xff
    20b0:	80 00 00             	addb   $0x0,(%rax)
	...

Disassembly of section .eh_frame:

00000000000020b8 <__FRAME_END__-0x78>:
    20b8:	14 00                	adc    $0x0,%al
    20ba:	00 00                	add    %al,(%rax)
    20bc:	00 00                	add    %al,(%rax)
    20be:	00 00                	add    %al,(%rax)
    20c0:	01 7a 52             	add    %edi,0x52(%rdx)
    20c3:	00 01                	add    %al,(%rcx)
    20c5:	78 10                	js     20d7 <__GNU_EH_FRAME_HDR+0x47>
    20c7:	01 1b                	add    %ebx,(%rbx)
    20c9:	0c 07                	or     $0x7,%al
    20cb:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    20d1:	00 00                	add    %al,(%rax)
    20d3:	00 1c 00             	add    %bl,(%rax,%rax,1)
    20d6:	00 00                	add    %al,(%rax)
    20d8:	88 ef                	mov    %ch,%bh
    20da:	ff                   	(bad)  
    20db:	ff 26                	jmp    *(%rsi)
    20dd:	00 00                	add    %al,(%rax)
    20df:	00 00                	add    %al,(%rax)
    20e1:	44 07                	rex.R (bad) 
    20e3:	10 00                	adc    %al,(%rax)
    20e5:	00 00                	add    %al,(%rax)
    20e7:	00 24 00             	add    %ah,(%rax,%rax,1)
    20ea:	00 00                	add    %al,(%rax)
    20ec:	34 00                	xor    $0x0,%al
    20ee:	00 00                	add    %al,(%rax)
    20f0:	30 ef                	xor    %ch,%bh
    20f2:	ff                   	(bad)  
    20f3:	ff 40 00             	incl   0x0(%rax)
    20f6:	00 00                	add    %al,(%rax)
    20f8:	00 0e                	add    %cl,(%rsi)
    20fa:	10 46 0e             	adc    %al,0xe(%rsi)
    20fd:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    2100:	0b 77 08             	or     0x8(%rdi),%esi
    2103:	80 00 3f             	addb   $0x3f,(%rax)
    2106:	1a 3b                	sbb    (%rbx),%bh
    2108:	2a 33                	sub    (%rbx),%dh
    210a:	24 22                	and    $0x22,%al
    210c:	00 00                	add    %al,(%rax)
    210e:	00 00                	add    %al,(%rax)
    2110:	1c 00                	sbb    $0x0,%al
    2112:	00 00                	add    %al,(%rax)
    2114:	5c                   	pop    %rsp
    2115:	00 00                	add    %al,(%rax)
    2117:	00 41 f0             	add    %al,-0x10(%rcx)
    211a:	ff                   	(bad)  
    211b:	ff 49 01             	decl   0x1(%rcx)
    211e:	00 00                	add    %al,(%rax)
    2120:	00 41 0e             	add    %al,0xe(%rcx)
    2123:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2129:	03 44 01 0c          	add    0xc(%rcx,%rax,1),%eax
    212d:	07                   	(bad)  
    212e:	08 00                	or     %al,(%rax)

0000000000002130 <__FRAME_END__>:
    2130:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003de8 <__frame_dummy_init_array_entry>:
    3de8:	50                   	push   %rax
    3de9:	11 00                	adc    %eax,(%rax)
    3deb:	00 00                	add    %al,(%rax)
    3ded:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003df0 <__do_global_dtors_aux_fini_array_entry>:
    3df0:	00 11                	add    %dl,(%rcx)
    3df2:	00 00                	add    %al,(%rax)
    3df4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003df8 <_DYNAMIC>:
    3df8:	01 00                	add    %eax,(%rax)
    3dfa:	00 00                	add    %al,(%rax)
    3dfc:	00 00                	add    %al,(%rax)
    3dfe:	00 00                	add    %al,(%rax)
    3e00:	49 00 00             	rex.WB add %al,(%r8)
    3e03:	00 00                	add    %al,(%rax)
    3e05:	00 00                	add    %al,(%rax)
    3e07:	00 0c 00             	add    %cl,(%rax,%rax,1)
    3e0a:	00 00                	add    %al,(%rax)
    3e0c:	00 00                	add    %al,(%rax)
    3e0e:	00 00                	add    %al,(%rax)
    3e10:	00 10                	add    %dl,(%rax)
    3e12:	00 00                	add    %al,(%rax)
    3e14:	00 00                	add    %al,(%rax)
    3e16:	00 00                	add    %al,(%rax)
    3e18:	0d 00 00 00 00       	or     $0x0,%eax
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 a4 12 00 00 00 00 	add    %ah,0x0(%rdx,%rdx,1)
    3e26:	00 00                	add    %al,(%rax)
    3e28:	19 00                	sbb    %eax,(%rax)
    3e2a:	00 00                	add    %al,(%rax)
    3e2c:	00 00                	add    %al,(%rax)
    3e2e:	00 00                	add    %al,(%rax)
    3e30:	e8 3d 00 00 00       	call   3e72 <_DYNAMIC+0x7a>
    3e35:	00 00                	add    %al,(%rax)
    3e37:	00 1b                	add    %bl,(%rbx)
    3e39:	00 00                	add    %al,(%rax)
    3e3b:	00 00                	add    %al,(%rax)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 08                	add    %cl,(%rax)
    3e41:	00 00                	add    %al,(%rax)
    3e43:	00 00                	add    %al,(%rax)
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 1a                	add    %bl,(%rdx)
    3e49:	00 00                	add    %al,(%rax)
    3e4b:	00 00                	add    %al,(%rax)
    3e4d:	00 00                	add    %al,(%rax)
    3e4f:	00 f0                	add    %dh,%al
    3e51:	3d 00 00 00 00       	cmp    $0x0,%eax
    3e56:	00 00                	add    %al,(%rax)
    3e58:	1c 00                	sbb    $0x0,%al
    3e5a:	00 00                	add    %al,(%rax)
    3e5c:	00 00                	add    %al,(%rax)
    3e5e:	00 00                	add    %al,(%rax)
    3e60:	08 00                	or     %al,(%rax)
    3e62:	00 00                	add    %al,(%rax)
    3e64:	00 00                	add    %al,(%rax)
    3e66:	00 00                	add    %al,(%rax)
    3e68:	f5                   	cmc    
    3e69:	fe                   	(bad)  
    3e6a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 c0                	add    %al,%al
    3e71:	03 00                	add    (%rax),%eax
    3e73:	00 00                	add    %al,(%rax)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e7d <_DYNAMIC+0x85>
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 b8 04 00 00 00    	add    %bh,0x4(%rax)
    3e85:	00 00                	add    %al,(%rax)
    3e87:	00 06                	add    %al,(%rsi)
    3e89:	00 00                	add    %al,(%rax)
    3e8b:	00 00                	add    %al,(%rax)
    3e8d:	00 00                	add    %al,(%rax)
    3e8f:	00 e0                	add    %ah,%al
    3e91:	03 00                	add    (%rax),%eax
    3e93:	00 00                	add    %al,(%rax)
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 0a                	add    %cl,(%rdx)
    3e99:	00 00                	add    %al,(%rax)
    3e9b:	00 00                	add    %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 c3                	add    %al,%bl
    3ea1:	00 00                	add    %al,(%rax)
    3ea3:	00 00                	add    %al,(%rax)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 0b                	add    %cl,(%rbx)
    3ea9:	00 00                	add    %al,(%rax)
    3eab:	00 00                	add    %al,(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 18                	add    %bl,(%rax)
    3eb1:	00 00                	add    %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3ebd <_DYNAMIC+0xc5>
	...
    3ec5:	00 00                	add    %al,(%rax)
    3ec7:	00 03                	add    %al,(%rbx)
	...
    3ed1:	40 00 00             	rex add %al,(%rax)
    3ed4:	00 00                	add    %al,(%rax)
    3ed6:	00 00                	add    %al,(%rax)
    3ed8:	02 00                	add    (%rax),%al
    3eda:	00 00                	add    %al,(%rax)
    3edc:	00 00                	add    %al,(%rax)
    3ede:	00 00                	add    %al,(%rax)
    3ee0:	48 00 00             	rex.W add %al,(%rax)
    3ee3:	00 00                	add    %al,(%rax)
    3ee5:	00 00                	add    %al,(%rax)
    3ee7:	00 14 00             	add    %dl,(%rax,%rax,1)
    3eea:	00 00                	add    %al,(%rax)
    3eec:	00 00                	add    %al,(%rax)
    3eee:	00 00                	add    %al,(%rax)
    3ef0:	07                   	(bad)  
    3ef1:	00 00                	add    %al,(%rax)
    3ef3:	00 00                	add    %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 17                	add    %dl,(%rdi)
    3ef9:	00 00                	add    %al,(%rax)
    3efb:	00 00                	add    %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 a0 06 00 00 00    	add    %ah,0x6(%rax)
    3f05:	00 00                	add    %al,(%rax)
    3f07:	00 07                	add    %al,(%rdi)
    3f09:	00 00                	add    %al,(%rax)
    3f0b:	00 00                	add    %al,(%rax)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 e0                	add    %ah,%al
    3f11:	05 00 00 00 00       	add    $0x0,%eax
    3f16:	00 00                	add    %al,(%rax)
    3f18:	08 00                	or     %al,(%rax)
    3f1a:	00 00                	add    %al,(%rax)
    3f1c:	00 00                	add    %al,(%rax)
    3f1e:	00 00                	add    %al,(%rax)
    3f20:	c0 00 00             	rolb   $0x0,(%rax)
    3f23:	00 00                	add    %al,(%rax)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 09                	add    %cl,(%rcx)
    3f29:	00 00                	add    %al,(%rax)
    3f2b:	00 00                	add    %al,(%rax)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 18                	add    %bl,(%rax)
    3f31:	00 00                	add    %al,(%rax)
    3f33:	00 00                	add    %al,(%rax)
    3f35:	00 00                	add    %al,(%rax)
    3f37:	00 fb                	add    %bh,%bl
    3f39:	ff                   	(bad)  
    3f3a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f3d:	00 00                	add    %al,(%rax)
    3f3f:	00 00                	add    %al,(%rax)
    3f41:	00 00                	add    %al,(%rax)
    3f43:	08 00                	or     %al,(%rax)
    3f45:	00 00                	add    %al,(%rax)
    3f47:	00 fe                	add    %bh,%dh
    3f49:	ff                   	(bad)  
    3f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f4d:	00 00                	add    %al,(%rax)
    3f4f:	00 90 05 00 00 00    	add    %dl,0x5(%rax)
    3f55:	00 00                	add    %al,(%rax)
    3f57:	00 ff                	add    %bh,%bh
    3f59:	ff                   	(bad)  
    3f5a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f5d:	00 00                	add    %al,(%rax)
    3f5f:	00 01                	add    %al,(%rcx)
    3f61:	00 00                	add    %al,(%rax)
    3f63:	00 00                	add    %al,(%rax)
    3f65:	00 00                	add    %al,(%rax)
    3f67:	00 f0                	add    %dh,%al
    3f69:	ff                   	(bad)  
    3f6a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f6d:	00 00                	add    %al,(%rax)
    3f6f:	00 7c 05 00          	add    %bh,0x0(%rbp,%rax,1)
    3f73:	00 00                	add    %al,(%rax)
    3f75:	00 00                	add    %al,(%rax)
    3f77:	00 f9                	add    %bh,%cl
    3f79:	ff                   	(bad)  
    3f7a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f7d:	00 00                	add    %al,(%rax)
    3f7f:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000003fd8 <.got>:
	...

Disassembly of section .got.plt:

0000000000004000 <_GLOBAL_OFFSET_TABLE_>:
    4000:	f8                   	clc    
    4001:	3d 00 00 00 00       	cmp    $0x0,%eax
	...
    4016:	00 00                	add    %al,(%rax)
    4018:	36 10 00             	ss adc %al,(%rax)
    401b:	00 00                	add    %al,(%rax)
    401d:	00 00                	add    %al,(%rax)
    401f:	00 46 10             	add    %al,0x10(%rsi)
    4022:	00 00                	add    %al,(%rax)
    4024:	00 00                	add    %al,(%rax)
    4026:	00 00                	add    %al,(%rax)
    4028:	56                   	push   %rsi
    4029:	10 00                	adc    %al,(%rax)
    402b:	00 00                	add    %al,(%rax)
    402d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000004030 <__data_start>:
	...

0000000000004038 <__dso_handle>:
    4038:	38 40 00             	cmp    %al,0x0(%rax)
    403b:	00 00                	add    %al,(%rax)
    403d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000004040 <completed.0>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 47 4e             	sub    %al,0x4e(%rdi)
   8:	55                   	push   %rbp
   9:	29 20                	sub    %esp,(%rax)
   b:	31 31                	xor    %esi,(%rcx)
   d:	2e 32 2e             	cs xor (%rsi),%ch
  10:	30 00                	xor    %al,(%rax)
